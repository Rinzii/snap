name: ci-linux

on:
  push:
    tags-ignore: [ "v*.*" ]
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

permissions:
  contents: read

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: ninja-gcc-debug,   configurePreset: ninja-gcc,   buildPreset: build-ninja-gcc-debug,   testPreset: test-ninja-gcc-debug }
          - { name: ninja-gcc-release, configurePreset: ninja-gcc,   buildPreset: build-ninja-gcc-release, testPreset: test-ninja-gcc-release }
          - { name: ninja-clang-debug, configurePreset: ninja-clang, buildPreset: build-ninja-clang-debug, testPreset: test-ninja-clang-debug }
          - { name: ninja-clang-release, configurePreset: ninja-clang, buildPreset: build-ninja-clang-release, testPreset: test-ninja-clang-release }

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2.11.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Ninja
        run: sudo apt-get update -qq && sudo apt-get install -yqq --no-install-recommends ninja-build

      - name: Cache build
        uses: actions/cache@v4
        with:
          path: |
            out/build
            **/CMakeFiles
            **/CMakeCache.txt
          key: ${{ runner.os }}-${{ matrix.name }}-${{ hashFiles('CMakePresets.json', 'tests/CMakeLists.txt') }}

      - name: Configure
        run: cmake --preset "${{ matrix.configurePreset }}"

      - name: Build
        run: cmake --build --preset "${{ matrix.buildPreset }}" --parallel

      - name: Test
        run: ctest --preset "${{ matrix.testPreset }}" --output-on-failure --schedule-random -F
